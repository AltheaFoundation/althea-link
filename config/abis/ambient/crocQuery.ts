export const CROC_QUERY_ABI = [
  {
    type: "constructor",
    stateMutability: "nonpayable",
    inputs: [{ type: "address", name: "dex", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "address", name: "", internalType: "address" }],
    name: "dex_",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint128", name: "seeds", internalType: "uint128" },
      { type: "uint32", name: "timestamp", internalType: "uint32" },
    ],
    name: "queryAmbientPosition",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint128", name: "liq", internalType: "uint128" },
      { type: "uint128", name: "baseQty", internalType: "uint128" },
      { type: "uint128", name: "quoteQty", internalType: "uint128" },
    ],
    name: "queryAmbientTokens",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint128", name: "liqRewards", internalType: "uint128" },
      { type: "uint128", name: "baseRewards", internalType: "uint128" },
      { type: "uint128", name: "quoteRewards", internalType: "uint128" },
    ],
    name: "queryConcRewards",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
      { type: "int24", name: "lowerTick", internalType: "int24" },
      { type: "int24", name: "upperTick", internalType: "int24" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "curve",
        internalType: "struct CurveMath.CurveState",
        components: [
          { type: "uint128", name: "priceRoot_", internalType: "uint128" },
          { type: "uint128", name: "ambientSeeds_", internalType: "uint128" },
          { type: "uint128", name: "concLiq_", internalType: "uint128" },
          { type: "uint64", name: "seedDeflator_", internalType: "uint64" },
          { type: "uint64", name: "concGrowth_", internalType: "uint64" },
        ],
      },
    ],
    name: "queryCurve",
    inputs: [
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "int24", name: "", internalType: "int24" }],
    name: "queryCurveTick",
    inputs: [
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint160", name: "root", internalType: "uint160" },
      { type: "uint32", name: "pivot", internalType: "uint32" },
      { type: "uint64", name: "fee", internalType: "uint64" },
    ],
    name: "queryKnockoutMerkle",
    inputs: [
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
      { type: "bool", name: "isBid", internalType: "bool" },
      { type: "int24", name: "tick", internalType: "int24" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint96", name: "lots", internalType: "uint96" },
      { type: "uint32", name: "pivot", internalType: "uint32" },
      { type: "uint16", name: "range", internalType: "uint16" },
    ],
    name: "queryKnockoutPivot",
    inputs: [
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
      { type: "bool", name: "isBid", internalType: "bool" },
      { type: "int24", name: "tick", internalType: "int24" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint96", name: "lots", internalType: "uint96" },
      { type: "uint64", name: "mileage", internalType: "uint64" },
      { type: "uint32", name: "timestamp", internalType: "uint32" },
    ],
    name: "queryKnockoutPos",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
      { type: "uint32", name: "pivot", internalType: "uint32" },
      { type: "bool", name: "isBid", internalType: "bool" },
      { type: "int24", name: "lowerTick", internalType: "int24" },
      { type: "int24", name: "upperTick", internalType: "int24" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint128", name: "liq", internalType: "uint128" },
      { type: "uint128", name: "baseQty", internalType: "uint128" },
      { type: "uint128", name: "quoteQty", internalType: "uint128" },
      { type: "bool", name: "knockedOut", internalType: "bool" },
    ],
    name: "queryKnockoutTokens",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
      { type: "uint32", name: "pivot", internalType: "uint32" },
      { type: "bool", name: "isBid", internalType: "bool" },
      { type: "int24", name: "lowerTick", internalType: "int24" },
      { type: "int24", name: "upperTick", internalType: "int24" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint96", name: "bidLots", internalType: "uint96" },
      { type: "uint96", name: "askLots", internalType: "uint96" },
      { type: "uint64", name: "odometer", internalType: "uint64" },
    ],
    name: "queryLevel",
    inputs: [
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
      { type: "int24", name: "tick", internalType: "int24" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint128", name: "", internalType: "uint128" }],
    name: "queryLiquidity",
    inputs: [
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "pool",
        internalType: "struct PoolSpecs.Pool",
        components: [
          { type: "uint8", name: "schema_", internalType: "uint8" },
          { type: "uint16", name: "feeRate_", internalType: "uint16" },
          { type: "uint8", name: "protocolTake_", internalType: "uint8" },
          { type: "uint16", name: "tickSize_", internalType: "uint16" },
          { type: "uint8", name: "jitThresh_", internalType: "uint8" },
          { type: "uint8", name: "knockoutBits_", internalType: "uint8" },
          { type: "uint8", name: "oracleFlags_", internalType: "uint8" },
        ],
      },
    ],
    name: "queryPoolParams",
    inputs: [
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      {
        type: "tuple",
        name: "pool",
        internalType: "struct PoolSpecs.Pool",
        components: [
          { type: "uint8", name: "schema_", internalType: "uint8" },
          { type: "uint16", name: "feeRate_", internalType: "uint16" },
          { type: "uint8", name: "protocolTake_", internalType: "uint8" },
          { type: "uint16", name: "tickSize_", internalType: "uint16" },
          { type: "uint8", name: "jitThresh_", internalType: "uint8" },
          { type: "uint8", name: "knockoutBits_", internalType: "uint8" },
          { type: "uint8", name: "oracleFlags_", internalType: "uint8" },
        ],
      },
    ],
    name: "queryPoolTemplate",
    inputs: [{ type: "uint256", name: "poolIdx", internalType: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint128", name: "", internalType: "uint128" }],
    name: "queryPrice",
    inputs: [
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint128", name: "", internalType: "uint128" }],
    name: "queryProtocolAccum",
    inputs: [{ type: "address", name: "token", internalType: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint128", name: "liq", internalType: "uint128" },
      { type: "uint64", name: "fee", internalType: "uint64" },
      { type: "uint32", name: "timestamp", internalType: "uint32" },
      { type: "bool", name: "atomic", internalType: "bool" },
    ],
    name: "queryRangePosition",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
      { type: "int24", name: "lowerTick", internalType: "int24" },
      { type: "int24", name: "upperTick", internalType: "int24" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [
      { type: "uint128", name: "liq", internalType: "uint128" },
      { type: "uint128", name: "baseQty", internalType: "uint128" },
      { type: "uint128", name: "quoteQty", internalType: "uint128" },
    ],
    name: "queryRangeTokens",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "base", internalType: "address" },
      { type: "address", name: "quote", internalType: "address" },
      { type: "uint256", name: "poolIdx", internalType: "uint256" },
      { type: "int24", name: "lowerTick", internalType: "int24" },
      { type: "int24", name: "upperTick", internalType: "int24" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint128", name: "surplus", internalType: "uint128" }],
    name: "querySurplus",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "token", internalType: "address" },
    ],
  },
  {
    type: "function",
    stateMutability: "view",
    outputs: [{ type: "uint128", name: "surplus", internalType: "uint128" }],
    name: "queryVirtual",
    inputs: [
      { type: "address", name: "owner", internalType: "address" },
      { type: "address", name: "tracker", internalType: "address" },
      { type: "uint256", name: "salt", internalType: "uint256" },
    ],
  },
] as const;
